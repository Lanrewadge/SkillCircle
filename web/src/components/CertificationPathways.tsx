'use client'

import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import {
  Award,
  Star,
  Clock,
  Users,
  BookOpen,
  Target,
  TrendingUp,
  CheckCircle,
  Zap,
  Crown,
  Trophy,
  ArrowRight,
  Calendar,
  DollarSign
} from 'lucide-react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'

interface CertificationLevel {
  id: string
  name: string
  description: string
  duration: string
  courses: number
  projects: number
  prerequisites: string[]
  skillsGained: string[]
  careerOutcomes: string[]
  salaryIncrease: string
  badgeColor: string
  icon: React.ReactNode
}

interface CertificationPathway {
  id: string
  name: string
  description: string
  industry: string
  totalDuration: string
  levels: CertificationLevel[]
  partneredCompanies: string[]
  recognitionBodies: string[]
  marketDemand: 'High' | 'Very High' | 'Extreme'
  averageStartingSalary: string
  seniorSalary: string
}

const certificationPathways: CertificationPathway[] = [
  {
    id: 'ai-ml-engineer',
    name: 'AI/ML Engineer Certification',
    description: 'Comprehensive pathway from ML fundamentals to advanced AI systems engineering',
    industry: 'Artificial Intelligence',
    totalDuration: '8-12 months',
    partneredCompanies: ['Google', 'Microsoft', 'NVIDIA', 'OpenAI', 'Meta', 'Amazon'],
    recognitionBodies: ['IEEE', 'ACM', 'MLOps Community', 'AI Engineering Institute'],
    marketDemand: 'Extreme',
    averageStartingSalary: '$95,000',
    seniorSalary: '$250,000+',
    levels: [
      {
        id: 'ml-fundamentals',
        name: 'ML Fundamentals',
        description: 'Master machine learning basics, statistics, and Python programming',
        duration: '2-3 months',
        courses: 3,
        projects: 4,
        prerequisites: ['Basic Python', 'High School Math'],
        skillsGained: ['Python', 'Pandas', 'Scikit-learn', 'Statistics', 'Data Visualization'],
        careerOutcomes: ['Junior Data Analyst', 'ML Intern'],
        salaryIncrease: '+$15,000',
        badgeColor: 'from-green-400 to-blue-500',
        icon: <BookOpen className=\"w-5 h-5\" />
      },\n      {\n        id: 'ml-engineer',\n        name: 'ML Engineer',\n        description: 'Production ML systems, MLOps, and model deployment at scale',\n        duration: '3-4 months',\n        courses: 4,\n        projects: 6,\n        prerequisites: ['ML Fundamentals Certification'],\n        skillsGained: ['MLOps', 'Docker', 'Kubernetes', 'Model Serving', 'CI/CD for ML'],\n        careerOutcomes: ['ML Engineer', 'Data Scientist'],\n        salaryIncrease: '+$35,000',\n        badgeColor: 'from-blue-500 to-purple-500',\n        icon: <Target className=\"w-5 h-5\" />\n      },\n      {\n        id: 'ai-specialist',\n        name: 'AI Specialist',\n        description: 'Deep learning, LLMs, computer vision, and cutting-edge AI research',\n        duration: '3-5 months',\n        courses: 5,\n        projects: 8,\n        prerequisites: ['ML Engineer Certification'],\n        skillsGained: ['Deep Learning', 'LLMs', 'Computer Vision', 'PyTorch', 'Transformers'],\n        careerOutcomes: ['AI Engineer', 'Research Scientist', 'AI Architect'],\n        salaryIncrease: '+$60,000',\n        badgeColor: 'from-purple-500 to-pink-500',\n        icon: <Crown className=\"w-5 h-5\" />\n      }\n    ]\n  },\n  {\n    id: 'fullstack-web3-dev',\n    name: 'Full-Stack Web3 Developer',\n    description: 'Complete blockchain and decentralized application development pathway',\n    industry: 'Blockchain & Web3',\n    totalDuration: '6-9 months',\n    partneredCompanies: ['Ethereum Foundation', 'Polygon', 'Chainlink', 'Uniswap', 'ConsenSys', 'Alchemy'],\n    recognitionBodies: ['Blockchain Council', 'ConsenSys Academy', 'Ethereum Foundation'],\n    marketDemand: 'Very High',\n    averageStartingSalary: '$85,000',\n    seniorSalary: '$200,000+',\n    levels: [\n      {\n        id: 'blockchain-basics',\n        name: 'Blockchain Fundamentals',\n        description: 'Understanding blockchain technology, cryptocurrencies, and smart contracts',\n        duration: '2 months',\n        courses: 2,\n        projects: 3,\n        prerequisites: ['Basic Programming Knowledge'],\n        skillsGained: ['Blockchain Concepts', 'Solidity Basics', 'Web3 Fundamentals'],\n        careerOutcomes: ['Blockchain Analyst', 'Crypto Researcher'],\n        salaryIncrease: '+$20,000',\n        badgeColor: 'from-yellow-400 to-orange-500',\n        icon: <BookOpen className=\"w-5 h-5\" />\n      },\n      {\n        id: 'smart-contract-dev',\n        name: 'Smart Contract Developer',\n        description: 'Advanced Solidity programming, DeFi protocols, and security practices',\n        duration: '2-3 months',\n        courses: 3,\n        projects: 5,\n        prerequisites: ['Blockchain Fundamentals Certification'],\n        skillsGained: ['Advanced Solidity', 'DeFi Protocols', 'Security Auditing', 'Testing'],\n        careerOutcomes: ['Smart Contract Developer', 'DeFi Engineer'],\n        salaryIncrease: '+$40,000',\n        badgeColor: 'from-orange-500 to-red-500',\n        icon: <Target className=\"w-5 h-5\" />\n      },\n      {\n        id: 'web3-fullstack',\n        name: 'Web3 Full-Stack Master',\n        description: 'Complete dApp development with frontend integration and deployment',\n        duration: '2-4 months',\n        courses: 4,\n        projects: 7,\n        prerequisites: ['Smart Contract Developer Certification'],\n        skillsGained: ['React + Web3', 'IPFS', 'The Graph', 'Layer 2 Solutions', 'Cross-chain'],\n        careerOutcomes: ['Web3 Full-Stack Developer', 'Blockchain Architect'],\n        salaryIncrease: '+$65,000',\n        badgeColor: 'from-red-500 to-purple-500',\n        icon: <Crown className=\"w-5 h-5\" />\n      }\n    ]\n  },\n  {\n    id: 'cloud-devops-architect',\n    name: 'Cloud DevOps Architect',\n    description: 'Master cloud infrastructure, DevOps practices, and platform engineering',\n    industry: 'Cloud Computing & DevOps',\n    totalDuration: '7-10 months',\n    partneredCompanies: ['AWS', 'Microsoft Azure', 'Google Cloud', 'Docker', 'Kubernetes', 'HashiCorp'],\n    recognitionBodies: ['AWS', 'Microsoft', 'Google Cloud', 'CNCF', 'DevOps Institute'],\n    marketDemand: 'Very High',\n    averageStartingSalary: '$80,000',\n    seniorSalary: '$180,000+',\n    levels: [\n      {\n        id: 'cloud-fundamentals',\n        name: 'Cloud Fundamentals',\n        description: 'Core cloud concepts, AWS/Azure basics, and infrastructure essentials',\n        duration: '2-3 months',\n        courses: 3,\n        projects: 4,\n        prerequisites: ['Basic Linux Knowledge'],\n        skillsGained: ['AWS/Azure/GCP', 'Cloud Architecture', 'Networking', 'Security'],\n        careerOutcomes: ['Cloud Support Engineer', 'Junior DevOps Engineer'],\n        salaryIncrease: '+$25,000',\n        badgeColor: 'from-cyan-400 to-blue-500',\n        icon: <BookOpen className=\"w-5 h-5\" />\n      },\n      {\n        id: 'devops-engineer',\n        name: 'DevOps Engineer',\n        description: 'CI/CD pipelines, infrastructure as code, and automation practices',\n        duration: '3-4 months',\n        courses: 4,\n        projects: 6,\n        prerequisites: ['Cloud Fundamentals Certification'],\n        skillsGained: ['Docker', 'Kubernetes', 'Terraform', 'Jenkins', 'Monitoring'],\n        careerOutcomes: ['DevOps Engineer', 'Site Reliability Engineer'],\n        salaryIncrease: '+$45,000',\n        badgeColor: 'from-blue-500 to-indigo-500',\n        icon: <Target className=\"w-5 h-5\" />\n      },\n      {\n        id: 'platform-architect',\n        name: 'Platform Architect',\n        description: 'Enterprise-scale platform design, multi-cloud strategies, and team leadership',\n        duration: '2-3 months',\n        courses: 3,\n        projects: 5,\n        prerequisites: ['DevOps Engineer Certification'],\n        skillsGained: ['Platform Engineering', 'Multi-cloud', 'Team Leadership', 'Architecture'],\n        careerOutcomes: ['Platform Architect', 'Principal Engineer', 'Engineering Manager'],\n        salaryIncrease: '+$70,000',\n        badgeColor: 'from-indigo-500 to-purple-500',\n        icon: <Crown className=\"w-5 h-5\" />\n      }\n    ]\n  },\n  {\n    id: 'iot-systems-engineer',\n    name: 'IoT Systems Engineer',\n    description: 'End-to-end IoT development from embedded systems to cloud integration',\n    industry: 'Internet of Things',\n    totalDuration: '6-8 months',\n    partneredCompanies: ['Intel', 'ARM', 'Qualcomm', 'Siemens', 'GE Digital', 'AWS IoT'],\n    recognitionBodies: ['IoT Council', 'Industrial Internet Consortium', 'IEEE IoT'],\n    marketDemand: 'High',\n    averageStartingSalary: '$75,000',\n    seniorSalary: '$150,000+',\n    levels: [\n      {\n        id: 'embedded-fundamentals',\n        name: 'Embedded Fundamentals',\n        description: 'Microcontroller programming, sensor integration, and basic IoT protocols',\n        duration: '2-3 months',\n        courses: 3,\n        projects: 5,\n        prerequisites: ['Basic Programming', 'Electronics Basics'],\n        skillsGained: ['Arduino', 'C/C++', 'Sensors', 'Basic IoT Protocols'],\n        careerOutcomes: ['Embedded Developer', 'IoT Technician'],\n        salaryIncrease: '+$20,000',\n        badgeColor: 'from-green-400 to-cyan-500',\n        icon: <BookOpen className=\"w-5 h-5\" />\n      },\n      {\n        id: 'iot-developer',\n        name: 'IoT Developer',\n        description: 'Advanced IoT protocols, cloud connectivity, and edge computing',\n        duration: '2-3 months',\n        courses: 3,\n        projects: 6,\n        prerequisites: ['Embedded Fundamentals Certification'],\n        skillsGained: ['MQTT', 'Cloud IoT', 'Edge Computing', 'Device Management'],\n        careerOutcomes: ['IoT Developer', 'IoT Solutions Engineer'],\n        salaryIncrease: '+$35,000',\n        badgeColor: 'from-cyan-500 to-purple-500',\n        icon: <Target className=\"w-5 h-5\" />\n      },\n      {\n        id: 'iot-architect',\n        name: 'IoT Systems Architect',\n        description: 'Enterprise IoT architecture, security, and large-scale deployments',\n        duration: '2 months',\n        courses: 2,\n        projects: 4,\n        prerequisites: ['IoT Developer Certification'],\n        skillsGained: ['IoT Architecture', 'Security', 'Scalability', 'System Integration'],\n        careerOutcomes: ['IoT Architect', 'IoT Consultant', 'Principal IoT Engineer'],\n        salaryIncrease: '+$55,000',\n        badgeColor: 'from-purple-500 to-pink-500',\n        icon: <Crown className=\"w-5 h-5\" />\n      }\n    ]\n  }\n]\n\ninterface CertificationPathwaysProps {\n  subcategory?: string\n}\n\nexport default function CertificationPathways({ subcategory }: CertificationPathwaysProps) {\n  const [selectedPathway, setSelectedPathway] = useState<CertificationPathway | null>(null)\n  const [selectedLevel, setSelectedLevel] = useState<CertificationLevel | null>(null)\n\n  // Filter pathways based on subcategory if provided\n  const filteredPathways = subcategory \n    ? certificationPathways.filter(pathway => \n        pathway.id.includes(subcategory) || \n        pathway.industry.toLowerCase().includes(subcategory)\n      )\n    : certificationPathways\n\n  const getDemandColor = (demand: string) => {\n    switch (demand) {\n      case 'High': return 'text-green-400'\n      case 'Very High': return 'text-yellow-400'\n      case 'Extreme': return 'text-red-400'\n      default: return 'text-blue-400'\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <motion.h2 \n          className=\"text-3xl md:text-4xl font-bold text-white mb-4\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n        >\n          🏆 Professional Certification Pathways\n        </motion.h2>\n        <motion.p \n          className=\"text-xl text-gray-300 max-w-3xl mx-auto\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          Industry-recognized certifications designed by leading companies. \n          Structured learning paths that guarantee career advancement.\n        </motion.p>\n      </div>\n\n      {/* Pathway Cards */}\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        {filteredPathways.map((pathway, index) => (\n          <motion.div\n            key={pathway.id}\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n          >\n            <Card \n              className=\"bg-white/10 backdrop-blur-sm border-white/20 hover:bg-white/15 transition-all duration-300 cursor-pointer h-full\"\n              onClick={() => setSelectedPathway(pathway)}\n            >\n              <CardHeader>\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-500 rounded-lg flex items-center justify-center\">\n                      <Trophy className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <CardTitle className=\"text-white\">{pathway.name}</CardTitle>\n                      <Badge className=\"mt-1 bg-gray-600 text-gray-200\">\n                        {pathway.industry}\n                      </Badge>\n                    </div>\n                  </div>\n                  <div className={`text-sm font-medium ${getDemandColor(pathway.marketDemand)}`}>\n                    {pathway.marketDemand} Demand\n                  </div>\n                </div>\n\n                <CardDescription className=\"text-gray-300 mb-4\">\n                  {pathway.description}\n                </CardDescription>\n\n                <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                  <div className=\"text-center p-3 bg-black/20 rounded-lg\">\n                    <div className=\"text-lg font-bold text-green-400\">{pathway.averageStartingSalary}</div>\n                    <div className=\"text-xs text-gray-400\">Starting Salary</div>\n                  </div>\n                  <div className=\"text-center p-3 bg-black/20 rounded-lg\">\n                    <div className=\"text-lg font-bold text-blue-400\">{pathway.seniorSalary}</div>\n                    <div className=\"text-xs text-gray-400\">Senior Salary</div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center gap-4 text-sm text-gray-400\">\n                  <div className=\"flex items-center gap-1\">\n                    <Clock className=\"w-4 h-4\" />\n                    {pathway.totalDuration}\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <Award className=\"w-4 h-4\" />\n                    {pathway.levels.length} Levels\n                  </div>\n                </div>\n              </CardHeader>\n\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {pathway.levels.map((level, levelIndex) => (\n                    <div \n                      key={level.id}\n                      className=\"flex items-center gap-3 p-3 bg-black/10 rounded-lg hover:bg-black/20 transition-colors\"\n                    >\n                      <div className={`w-8 h-8 bg-gradient-to-r ${level.badgeColor} rounded-full flex items-center justify-center`}>\n                        {level.icon}\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium text-white text-sm\">{level.name}</div>\n                        <div className=\"text-xs text-gray-400\">{level.duration} • {level.courses} courses</div>\n                      </div>\n                      <div className=\"text-xs text-green-400 font-medium\">\n                        {level.salaryIncrease}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <Button \n                  className=\"w-full mt-4 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700\"\n                  data-magnetic\n                >\n                  View Full Pathway <ArrowRight className=\"w-4 h-4 ml-2\" />\n                </Button>\n              </CardContent>\n            </Card>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Detailed Pathway Modal */}\n      <AnimatePresence>\n        {selectedPathway && (\n          <motion.div\n            className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/80 backdrop-blur-sm\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={() => setSelectedPathway(null)}\n          >\n            <motion.div\n              className=\"bg-gray-900 rounded-2xl p-6 max-w-4xl w-full max-h-[90vh] overflow-y-auto border border-white/20\"\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"flex items-start justify-between mb-6\">\n                <div>\n                  <h3 className=\"text-2xl font-bold text-white mb-2\">{selectedPathway.name}</h3>\n                  <p className=\"text-gray-300\">{selectedPathway.description}</p>\n                </div>\n                <button\n                  onClick={() => setSelectedPathway(null)}\n                  className=\"text-gray-400 hover:text-white transition-colors\"\n                >\n                  ×\n                </button>\n              </div>\n\n              {/* Pathway Statistics */}\n              <div className=\"grid md:grid-cols-4 gap-4 mb-8\">\n                <div className=\"bg-black/20 rounded-lg p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-blue-400\">{selectedPathway.levels.length}</div>\n                  <div className=\"text-sm text-gray-400\">Certification Levels</div>\n                </div>\n                <div className=\"bg-black/20 rounded-lg p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-green-400\">{selectedPathway.totalDuration}</div>\n                  <div className=\"text-sm text-gray-400\">Total Duration</div>\n                </div>\n                <div className=\"bg-black/20 rounded-lg p-4 text-center\">\n                  <div className=\"text-2xl font-bold text-purple-400\">{selectedPathway.partneredCompanies.length}</div>\n                  <div className=\"text-sm text-gray-400\">Partner Companies</div>\n                </div>\n                <div className=\"bg-black/20 rounded-lg p-4 text-center\">\n                  <div className={`text-2xl font-bold ${getDemandColor(selectedPathway.marketDemand)}`}>\n                    {selectedPathway.marketDemand}\n                  </div>\n                  <div className=\"text-sm text-gray-400\">Market Demand</div>\n                </div>\n              </div>\n\n              {/* Detailed Levels */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-xl font-bold text-white\">Certification Levels</h4>\n                {selectedPathway.levels.map((level, index) => (\n                  <motion.div\n                    key={level.id}\n                    className=\"bg-black/20 rounded-lg p-6 cursor-pointer hover:bg-black/30 transition-colors\"\n                    onClick={() => setSelectedLevel(selectedLevel?.id === level.id ? null : level)}\n                    whileHover={{ scale: 1.02 }}\n                  >\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div className=\"flex items-center gap-4\">\n                        <div className={`w-12 h-12 bg-gradient-to-r ${level.badgeColor} rounded-full flex items-center justify-center`}>\n                          {level.icon}\n                        </div>\n                        <div>\n                          <h5 className=\"text-lg font-bold text-white\">Level {index + 1}: {level.name}</h5>\n                          <p className=\"text-gray-300 text-sm\">{level.description}</p>\n                        </div>\n                      </div>\n                      <div className=\"text-green-400 font-bold\">{level.salaryIncrease}</div>\n                    </div>\n\n                    <AnimatePresence>\n                      {selectedLevel?.id === level.id && (\n                        <motion.div\n                          initial={{ opacity: 0, height: 0 }}\n                          animate={{ opacity: 1, height: 'auto' }}\n                          exit={{ opacity: 0, height: 0 }}\n                          className=\"mt-4 space-y-4\"\n                        >\n                          <div className=\"grid md:grid-cols-3 gap-4\">\n                            <div>\n                              <h6 className=\"font-medium text-blue-400 mb-2\">Skills You'll Gain</h6>\n                              <div className=\"space-y-1\">\n                                {level.skillsGained.map(skill => (\n                                  <div key={skill} className=\"text-sm text-gray-300 flex items-center gap-2\">\n                                    <CheckCircle className=\"w-3 h-3 text-green-400\" />\n                                    {skill}\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                            \n                            <div>\n                              <h6 className=\"font-medium text-purple-400 mb-2\">Career Outcomes</h6>\n                              <div className=\"space-y-1\">\n                                {level.careerOutcomes.map(outcome => (\n                                  <div key={outcome} className=\"text-sm text-gray-300 flex items-center gap-2\">\n                                    <TrendingUp className=\"w-3 h-3 text-blue-400\" />\n                                    {outcome}\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n\n                            <div>\n                              <h6 className=\"font-medium text-yellow-400 mb-2\">Program Details</h6>\n                              <div className=\"space-y-2 text-sm text-gray-300\">\n                                <div className=\"flex items-center gap-2\">\n                                  <Clock className=\"w-3 h-3\" />\n                                  {level.duration}\n                                </div>\n                                <div className=\"flex items-center gap-2\">\n                                  <BookOpen className=\"w-3 h-3\" />\n                                  {level.courses} courses\n                                </div>\n                                <div className=\"flex items-center gap-2\">\n                                  <Target className=\"w-3 h-3\" />\n                                  {level.projects} projects\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"flex gap-3\">\n                            <Button className=\"bg-blue-600 hover:bg-blue-700\">\n                              Start Level {index + 1}\n                            </Button>\n                            <Button variant=\"outline\" className=\"border-gray-600 text-gray-300\">\n                              View Curriculum\n                            </Button>\n                          </div>\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                  </motion.div>\n                ))}\n              </div>\n\n              {/* Partner Companies */}\n              <div className=\"mt-8\">\n                <h4 className=\"text-lg font-bold text-white mb-4\">Industry Partners & Recognition</h4>\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <h5 className=\"text-sm font-medium text-blue-400 mb-2\">Partner Companies</h5>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {selectedPathway.partneredCompanies.map(company => (\n                        <Badge key={company} variant=\"secondary\" className=\"bg-blue-600/20 text-blue-300\">\n                          {company}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                  <div>\n                    <h5 className=\"text-sm font-medium text-purple-400 mb-2\">Recognition Bodies</h5>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {selectedPathway.recognitionBodies.map(body => (\n                        <Badge key={body} variant=\"secondary\" className=\"bg-purple-600/20 text-purple-300\">\n                          {body}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}